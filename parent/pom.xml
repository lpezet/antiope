<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.lpezet.antiope</groupId>
	<artifactId>parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<distributionManagement>
		<repository>
			<id>antiope-release</id>
			<name>Antiope Release</name>
			<url>dav:https://repository-antiope.forge.cloudbees.com/release/</url>
		</repository>
		<snapshotRepository>
			<id>antiope-snapshot</id>
			<name>Antiope Snapshot</name>
			<url>dav:https://repository-antiope.forge.cloudbees.com/snapshot/</url>
		</snapshotRepository>
	</distributionManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>https://antiope.ci.cloudbees.com/</url>
	</ciManagement>
	<profiles>
		<profile>
			<id>jdk6</id>
			<properties>
				<java.compiler.version>1.6</java.compiler.version>
			</properties>
		</profile>
		<profile>
			<id>jdk7</id>
			<properties>
				<java.compiler.version>1.7</java.compiler.version>
			</properties>
		</profile>
		<profile>
			<id>integration</id>
			<!--The profile for running the unit and integration test -->
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<childDelegation>false</childDelegation>
							<useFile>true</useFile>
							<includes>
								<include>**/*Test.*</include>
								<include>**/*Integration.*</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>deploy</id>
			<build>
				<defaultGoal>deploy</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>source-jar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<properties>
		<!-- This way Eclipse can setup project using version 1.6 by default -->
		<java.compiler.version>1.6</java.compiler.version>
		<java.compiler.showWarnings>true</java.compiler.showWarnings>
		<java.compiler.debug>true</java.compiler.debug>
		<java.compiler.optimize>false</java.compiler.optimize>
		<java.compiler.fork>true</java.compiler.fork>
		<java.compiler.maxmem>256M</java.compiler.maxmem>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.sourceDirectory>src/main/java</project.build.sourceDirectory>
		<project.build.testSourceDirectory>src/test/java</project.build.testSourceDirectory>

		<maven-bundle-version>2.3.4</maven-bundle-version>
		<slf4j.version>1.6.1</slf4j.version>
		<logback-classic.version>1.0.13</logback-classic.version>
		<mockito-core.version>1.9.5</mockito-core.version>
		<hamcrest-all.version>1.3</hamcrest-all.version>
		<junit.version>4.11</junit.version>
	</properties>

	<repositories>
		<repository>
			<id>antiope-snapshot</id>
			<url>https://repository-antiope.forge.cloudbees.com/snapshot/</url>
			<name>Antiope Snapshot Repo</name>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>antiope-release</id>
			<url>https://repository-antiope.forge.cloudbees.com/release/</url>
			<name>Antiope Release Repo</name>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<scm>
		<connection>scm:git:ssh://git@github.com/lpezet/antiope.git</connection>
    	<developerConnection>scm:git:ssh://git@github.com/lpezet/antiope.git</developerConnection>
		<url>https://github.com/lpezet/antiope</url>
	</scm>


	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>2.6</version>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.5</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>${java.compiler.version}</source>
						<target>${java.compiler.version}</target>
						<maxmem>${java.compiler.fork}</maxmem>
						<fork>${java.compiler.fork}</fork>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.rat</groupId>
					<artifactId>apache-rat-plugin</artifactId>
					<version>0.7</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
					<configuration>
						<attach>true</attach>
						<source>1.6</source>
						<quiet>true</quiet>
						<bottom>lpezet</bottom>
						<detectOfflineLinks>false</detectOfflineLinks>
						<javadocVersion>1.6</javadocVersion>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.4.2</version>
					<!-- <configuration> <tagBase>https://svn.apache.org/repos/asf/camel/tags</tagBase> 
						<useReleaseProfile>false</useReleaseProfile> <preparationGoals>clean install</preparationGoals> 
						<goals>deploy</goals> <arguments>-Papache-release,enable-schemagen,sourcecheck,validate,hibernate-derby</arguments> 
						<autoVersionSubmodules>true</autoVersionSubmodules> </configuration> -->
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<!-- using this version to avoid build error of Maven 2.2.1 -->
					<version>1.2.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1</version>
					<configuration>
						<webResources>
							<!-- HACK: Include legal files explicitly, otherwise they will end 
								up in the wrong path or in another jar file in the war. NOTE: targetPath 
								is broken for webResources (as documented) -->
							<resource>
								<directory>${project.build.outputDirectory}</directory>
								<includes>
									<include>META-INF/LICENSE*</include>
									<include>META-INF/NOTICE*</include>
									<include>META-INF/DEPENDENCIES*</include>
								</includes>
							</resource>
						</webResources>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<check>
							<branchRate>85</branchRate>
							<lineRate>85</lineRate>
							<haltOnFailure>false</haltOnFailure>
							<totalBranchRate>85</totalBranchRate>
							<totalLineRate>85</totalLineRate>
							<packageLineRate>85</packageLineRate>
							<packageBranchRate>85</packageBranchRate>
						</check>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.3</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.4.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-remote-resources-plugin</artifactId>
					<version>1.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${maven-bundle-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<configuration>
						<archive>
							<manifestEntries>
								<Bundle-SymbolicName>${project.groupId}.${project.artifactId}.source</Bundle-SymbolicName>
								<Bundle-Version>${project.version.clean}</Bundle-Version>
								<Eclipse-SourceBundle>${project.groupId}.${project.artifactId};version="${project.version.clean}"</Eclipse-SourceBundle>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.0-alpha-2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>axistools-maven-plugin</artifactId>
					<version>1.3</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>ianal-maven-plugin</artifactId>
					<version>1.0-alpha-1</version>
				</plugin>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>taglist-maven-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!--forkMode>pertest</forkMode -->
					<childDelegation>false</childDelegation>
					<useFile>true</useFile>
					<failIfNoTests>false</failIfNoTests>
					<runOrder>alphabetical</runOrder>
					<systemPropertyVariables>
						<java.awt.headless>${java.awt.headless}</java.awt.headless>
					</systemPropertyVariables>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>ianal-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>verify-legal-files</goal>
						</goals>
						<configuration>
							<!--  fails for javadoc jars as legal files are not included somehow -->
							<strict>false</strict>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-core.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest-all.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- LOGGING -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-classic.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>